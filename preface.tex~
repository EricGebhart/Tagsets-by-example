
The SAS Output Delivery System's (ODS) markup destination appears
to be much like all the other destination types that ODS is capable
of.  In reality it is quite different.  

The other ODS destinations have a
fixed output type.  The RTF destination can only create RTF output.
The printer destination can create postscript, PCL, and PDF.  But ODS
Markup can create any number of output types, all of which can be
created or modified by anyone.

ODS Markup is able to do this because it is really a framework which
uses a tagset to define what it should print to it's files.  The other
destinations, including the old HTML destination were hard coded
and compiled as a part of the SAS executable.  

A tagset can be described as a group of events or functions which use
a programming syntax similar to other programming languages such as
perl, python, shell, and datastep. 

We can create and use as many different tagsets as we like.  
There are a number of tagsets that come standard as a part of SAS.

Because there are so many different tagsets, ODS Markup is rather 
chameleon-like.  ODS HTML is really ODS Markup.  So is the CSV 
destination, and CHTML, excelXP, LaTeX, Troff, etc.  The only 
difference between these different ODS destinations is the tagset 
that is in use.  They are all really ODS Markup, we just don't call
it that.
 
When we use ODS Markup we are using a tagset.  The tagset determines
the type of output. Therefore, a tagset defines an output destination!
This realization has far reaching implications.  It means that we
can change the html that ODS HTML generates.  It means we can create
a new HTML destination with your corporate style and headings.  We
can create a new XML destination to allow data interchange with a
business partner or client.  We can even create a simple flat file
format that can simplify processing by other programs. The possiblities 
are endless.

It stands to reason, that if we want to use ODS Markup to our best
advantage, what we really want to do is use tagsets.  That
is what this book is going to explore.  What are these tagsets and how
do we use them?  You will find that tagsets can simplify otherwise
complex problems in a way that allows reuse and flexibility that
would not be possible with out them.
